

ColorTheme* theme;

ColorTheme theme_programer_art;
ColorTheme theme_kimbie_dark;

ProgLanguage[] languages;
ProgLanguage language_mode;

struct ProgLanguage {
    string name;
    string[] keywords;
}

// TODO: idea: interpolate color theme
struct ColorTheme {
    Color background;

    // Tokens:
    // Color whitespace; // for when whitespace gets rendered
    Color word;
    Color keyword;
    Color punctuation;
    Color number_literal;
    Color string_literal;
    Color comment;
    Color unknown;
}

void init_languages() {
    ProgLanguage pog_lang = {};
    pog_lang.name = make_string("Pog");

    char*[] kw = {
        "struct", "enum", "alloc", "let", "include", "if", "else", "while", "true", "false",
        "and", "or", "null", "continue", "break", "return", "type", "as", "const",
        "for", "switch", "default", "case", "goto", "with", "static", "sizeof"
    };

    pog_lang.keywords.data = malloc(kw.length * sizeof string);
    pog_lang.keywords.length = kw.length;
    for 0 .. kw.length {
        pog_lang.keywords[it] = make_string(kw[it]);
    }

    language_mode = pog_lang;

}

void init_themes() {
    theme_programer_art.background     = {12, 12, 12, 255} as Color;
    theme_programer_art.word           = Gray;
    theme_programer_art.keyword        = Purple;
    theme_programer_art.punctuation    = White;
    theme_programer_art.number_literal = Cyan;
    theme_programer_art.string_literal = Yellow;
    theme_programer_art.comment        = Green;
    theme_programer_art.unknown        = White;

    /*
        #DC3958	Variables, tags
        #8AB1B0	Functions, CSS #ids, markup headings
        #088649	Embedded punctuation (e.g. ${} or {} )
        #F06431	Classes, CSS classes
        #7E602C	Regex, escape characters, attributes and preprocessors
    */
    theme_kimbie_dark.background     = rgba(0x221A0FFF);
    theme_kimbie_dark.word           = rgba(0xDC3958FF); // blue: rgba(0x8AB1B0FF);
    theme_kimbie_dark.keyword        = rgba(0x98676AFF);
    theme_kimbie_dark.punctuation    = rgba(0xD3AF86FF);
    theme_kimbie_dark.number_literal = rgba(0xF79A32FF);
    theme_kimbie_dark.string_literal = rgba(0x889B4AFF);
    theme_kimbie_dark.comment        = rgba(0xA57A4CFF);
    theme_kimbie_dark.unknown        = rgba(0xFFFFFFFF);

    // set_theme(*theme_kimbie_dark);
    set_theme(*theme_programer_art);
}


void set_theme(ColorTheme* new_theme) {
    theme = new_theme;
    set_clear_color(theme.background);
}

